<script>
document.addEventListener('DOMContentLoaded', function () {
   const form = document.querySelector('.needs-validation');
   const inputs = form.querySelectorAll('input[required]');
   const passwordInput = document.getElementById('r_password');
   const confirmPasswordInput = document.getElementById('f_password');

   form.addEventListener('submit', async function (event) {
       if (!form.checkValidity()) {
           event.preventDefault();
           event.stopPropagation();
       } else{
        event.preventDefault();
        const firstName = document.getElementById('f_name').value;
        const lastName = document.getElementById('l_name').value;
        const email = document.getElementById('r_email').value;
        const number = document.getElementById('r_mobile').value;
        const password = document.getElementById('r_password').value;
        const confirmPassword = document.getElementById('f_password').value;
        const referral = document.getElementById('referral').value;

        const response = await fetch(`/signup?referral=${referral}`,{
           method: 'POST',
           headers: {
              'Content-Type': 'application/json',
           },
           body: JSON.stringify({firstName, lastName, email, number, password, confirmPassword}),
        });
        if(response.status === 404){
           $('#errorMessage').text('This is an invalid referral link');
           $('#errorMessage').css('display', 'block');
        }
        if(response.status === 409){
           $('#errorMessage').text('User with this email already exists! Please login or use a different email');
           $('#errorMessage').css('display', 'block');
        }
        if(response.status === 200){
           const loader = document.getElementById('loader');
           loader.style.display = 'block'; // Show the loader
           const response = await  fetch('/sendOtp');
           if(response.status === 200){
               
           }
           
        }
        
       }
       
       // Check if passwords match
       if (passwordInput.value !== confirmPasswordInput.value) {
           confirmPasswordInput.setCustomValidity('Passwords do not match');
       } else {
           confirmPasswordInput.setCustomValidity('');
       }
       

          form.classList.add('was-validated');
   });

   inputs.forEach(input => {
       input.addEventListener('input', function () {
           // Trim the value for names
           if (input.name === 'firstName' || input.name === 'lastName') {
               input.value = input.value.trim();
           }

           if (input.checkValidity()) {
               input.classList.remove('is-invalid');
               input.nextElementSibling.textContent = '';
           } else {
               input.classList.add('is-invalid');
               input.nextElementSibling.textContent = input.validationMessage;
           }
       });
   });   

   passwordInput.addEventListener('input', function () {
       // Check if passwords match
       
       if (passwordInput.value !== confirmPasswordInput.value) {
           confirmPasswordInput.setCustomValidity('Passwords do not match');
       } else {
           confirmPasswordInput.setCustomValidity('');
       }

       // Check if password meets the strong password criteria
        const passwordRegex = /^(?=.*[A-Za-z])(?=.*\d)[A-Za-z\d@$!%*?&]{8,}$/;
        if (!passwordRegex.test(passwordInput.value)) {
              passwordInput.setCustomValidity('Password must be at least 8 characters, including at least one special character and one digit.');
        } else {
              passwordInput.setCustomValidity('');
        }
   });

   confirmPasswordInput.addEventListener('input', function () {
     
       // Check if passwords match
       if (passwordInput.value !== confirmPasswordInput.value) {
           confirmPasswordInput.setCustomValidity('Passwords do not match');
       } else {
           confirmPasswordInput.setCustomValidity('');
       }

       if (confirmPasswordInput.checkValidity()) {
           confirmPasswordInput.classList.remove('is-invalid');
           confirmPasswordInput.nextElementSibling.textContent = '';
       } else {
           confirmPasswordInput.classList.add('is-invalid');
           confirmPasswordInput.nextElementSibling.textContent = confirmPasswordInput.validationMessage;
       }
   });

});

const showModal = () => {
  $('#modalHead').text('Invalid');            
  $('#modalText').text('Please login or signup!!!');            
  $("#statusErrorsModal").modal('show');
}

</script>
